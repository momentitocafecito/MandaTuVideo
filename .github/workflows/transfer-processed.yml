name: Transfer processed JSON to MAAS

on:
  push:
    paths:
      - 'dialog_data_processed/**'
  workflow_dispatch:

jobs:
  copy-to-maas:
    runs-on: ubuntu-latest

    steps:
      - name: Check out current repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: false

      - name: Identify changed files
        id: diff
        run: |
          git fetch --depth=2
          git diff --name-only --diff-filter=A HEAD^ HEAD -- dialog_data_processed/ > changed_files.txt
          echo "Changed files:"
          cat changed_files.txt

      - name: Filter allowed and update CSV
        id: filter
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          # Instalamos la librerÃ­a de Supabase
          npm install @supabase/supabase-js
          # Ejecutamos el script
          node scripts/filterAllowed.js changed_files.txt
          
          # Tomar la variable approved_count del archivo GITHUB_OUTPUT
          # y exponerla como output de este paso
          if [ -f $GITHUB_OUTPUT ]; then
            echo "approved_count=$(grep approved_count $GITHUB_OUTPUT | cut -d= -f2)" >> $GITHUB_OUTPUT
          fi

      # Solo se ejecuta si approved_count != 0
      - name: Check out external repo
        if: steps.filter.outputs.approved_count != '0'
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.EXTERNAL_REPO }}
          token: ${{ secrets.EXTERNAL_PAT }}
          path: external_repo
          persist-credentials: false

      - name: Copy new processed files
        if: steps.filter.outputs.approved_count != '0'
        run: |
          while read file; do
            [ -z "$file" ] && continue
            cp "$file" external_repo/${{ secrets.EXTERNAL_TARGET_PATH }}
          done < approved_files.txt

      - name: Commit & push to external repo
        if: steps.filter.outputs.approved_count != '0'
        run: |
          cd external_repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ secrets.EXTERNAL_TARGET_PATH }}
          git commit -m "Auto-transfer new processed JSON file(s)" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.EXTERNAL_PAT }}@github.com/${{ secrets.EXTERNAL_REPO }}.git
          git push origin HEAD:${{ secrets.EXTERNAL_BRANCH }}

      - name: Commit and push changes to current repo
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/data.csv
          git commit -m "Update videos_procesados after filterAllowed" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${PAT_TOKEN}@github.com/momentitocafecito/MandaTuVideo.git
          git push origin HEAD:$(git rev-parse --abbrev-ref HEAD)
